{"version":3,"sources":["components/chart.js","app.js","index.js"],"names":["backGroundColors","Graph","node","this","dataset","props","data","map","index","country","gdp","label","x","population","y","r","backgroundColor","Chart","type","datasets","options","scales","xAxes","scaleLabel","display","fontSize","labelString","yAxes","legend","position","style","width","height","marginTop","paddingTop","ref","React","Component","countries","gdpApi","axios","create","baseURL","populationApi","App","state","countriesData","Promise","all","get","then","values","stats","value","gdpData","populationData","console","log","setState","length","ReactDOM","render","document","getElementById"],"mappings":"2QAGIA,EAAmB,CACrB,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,2BAuDaC,E,4LAlDX,IAAMC,EAAOC,KAAKD,KAEdE,EADSD,KAAKE,MACCC,KAAKC,IAAI,WAA6BC,GAAW,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,IACrC,MAAO,CACLC,MAAOF,EACPH,KAAM,CAAC,CAACM,EAHuD,EAAvBC,WAGjBC,EAAGJ,EAAKK,EAAG,KAClCC,gBAAiB,CAAChB,EAAiBQ,OAGzB,IAAIS,IAAMf,EAAM,CAC5BgB,KAAM,SACNZ,KAAM,CACJa,SAAUf,GAEZgB,QAAS,CACPC,OAAQ,CACNC,MAAO,CAAC,CACNC,WAAY,CACVC,SAAS,EACTC,SAAU,GACVC,YAAa,4BAGjBC,MAAO,CAAC,CACNJ,WAAY,CACVC,SAAS,EACTC,SAAU,GACVC,YAAa,2BAInBE,OAAQ,CACNC,SAAU,e,+BAMR,IAAD,OACP,OACE,6BACE,4BACEC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,UAAW,OAAQC,WAAY,QACjEC,IAAK,SAAAjC,GAAI,OAAK,EAAKA,KAAOA,U,GA7ChBkC,IAAMC,WCRpBC,EAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEjDC,EAAS,SAAC9B,GAAD,OAAa+B,IAAMC,OAAO,CACvCC,QAAQ,uCAAD,OAAyCjC,EAAzC,sDAGHkC,EAAgB,SAAClC,GAAD,OAAa+B,IAAMC,OAAO,CAC9CC,QAAQ,uCAAD,OAAyCjC,EAAzC,mDAoCMmC,E,2MAhCbC,MAAQ,CACNC,cAAe,I,mFAEG,IAAD,OACbA,EAAgBR,EAAU/B,IAAI,SAAAE,GAAO,OAAIsC,QAAQC,IAAI,CAACT,EAAO9B,GAASwC,MAAON,EAAclC,GAASwC,UACxGF,QAAQC,IAAIF,GAAeI,KAAK,SAAAC,GAC9B,IAAIC,EAAQD,EAAO5C,IAAI,SAAA8C,GACrB,IAAIC,EAAUD,EAAM,GAAG/C,KAAK,GAAG,GAC3BiD,EAAiBF,EAAM,GAAG/C,KAAK,GAAG,GAOtC,OANAkD,QAAQC,IAAIH,EAASC,GACH,CAChB9C,QAAS6C,EAAQ7C,QAAQ4C,MACzB3C,IAAK4C,EAAQD,MAAQ,IACrBxC,WAAY0C,EAAeF,MAAQ,OAIvC,EAAKK,SAAS,WACZ,MAAO,CAAEZ,cAAeM,S,+BAKrB,IACCN,EAAkB3C,KAAK0C,MAAvBC,cAER,OAAO,6BAAMA,EAAca,OAAS,EAAI,kBAAC,EAAD,CAAOrD,KAAMH,KAAK0C,MAAMC,gBAAoB,U,GA3BtEV,IAAMC,WCXxBuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2d4c1647.chunk.js","sourcesContent":["import React from 'react';\nimport Chart from 'chart.js';\n\nlet backGroundColors = [ \n  'rgba(255, 99, 132, 0.7)',\n  'rgba(54, 162, 235, 0.7)',\n  'rgba(255, 206, 86, 0.7)',\n  'rgba(75, 192, 192, 0.7)',\n  'rgba(153, 102, 255, 0.7)',\n  'rgba(255, 159, 64, 0.7)',\n  'rgba(255, 192, 86, 0.7)',\n]\n\nclass Graph extends React.Component {\n  componentDidMount() {\n    const node = this.node;\n    const data = this.props;\n    let dataset = data.data.map(({country, gdp, population}, index) => {\n      return {\n        label: country,\n        data: [{x: population, y: gdp, r: 20}],\n        backgroundColor: [backGroundColors[index]]\n      }\n    })\n    var myChart = new Chart(node, {\n      type: \"bubble\",\n      data: {\n        datasets: dataset\n      },\n      options: {\n        scales: {\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              fontSize: 20,\n              labelString: 'Population in Millions'\n            }\n          }],\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              fontSize: 20,\n              labelString: 'GDP(US $) in Billons'\n            }\n          }]\n        },\n        legend: {\n          position: 'bottom'\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas\n          style={{ width: 800, height: 300, marginTop: '50px', paddingTop: '20px' }}\n          ref={node => (this.node = node)}\n        />\n      </div>\n    );\n  } \n}\n\nexport default Graph;","import React from 'react';\nimport axios from 'axios';\n\nimport Graph from './components/chart';\n\nconst countries = ['in', 'cn', 'de', 'hu', 'br', 'us', 'sa'];\n\nconst gdpApi = (country) => axios.create({\n  baseURL: `http://api.worldbank.org/v2/country/${country}/indicator/NY.GDP.MKTP.CD?format=json&date=2017`\n})\n\nconst populationApi = (country) => axios.create({\n  baseURL: `http://api.worldbank.org/v2/country/${country}/indicator/SP.POP.TOTL?format=json&date=2017`\n})\n\nclass App extends React.Component {\n  state = {\n    countriesData: []\n  }\n  componentDidMount(){\n    let countriesData = countries.map(country => Promise.all([gdpApi(country).get(), populationApi(country).get()]));\n    Promise.all(countriesData).then(values => {\n      let stats = values.map(value => {\n        let gdpData = value[0].data[1][0];\n        let populationData = value[1].data[1][0];\n        console.log(gdpData, populationData);\n        let countryStat = {\n          country: gdpData.country.value ,\n          gdp: gdpData.value / 1000000000,\n          population: populationData.value / 1000000\n        }\n        return countryStat;\n      })\n      this.setState(() => {\n        return { countriesData: stats}\n      })\n    });\n  }\n  \n  render(){\n    const { countriesData } = this.state;\n  \n    return <div>{countriesData.length > 0 ? <Graph data={this.state.countriesData} /> : null}</div>\n  }\n\n}\n\n\nexport default App;","import React from  'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}